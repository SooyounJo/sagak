/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "(pages-dir-browser)/./components/CharacterViewer.js":
/*!***************************************!*\
  !*** ./components/CharacterViewer.js ***!
  \***************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ CharacterViewer)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(pages-dir-browser)/./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var styled_jsx_style__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! styled-jsx/style */ \"(pages-dir-browser)/./node_modules/styled-jsx/style.js\");\n/* harmony import */ var styled_jsx_style__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(styled_jsx_style__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"(pages-dir-browser)/./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! three */ \"(pages-dir-browser)/./node_modules/three/build/three.module.js\");\n/* harmony import */ var three_examples_jsm_loaders_GLTFLoader__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! three/examples/jsm/loaders/GLTFLoader */ \"(pages-dir-browser)/./node_modules/three/examples/jsm/loaders/GLTFLoader.js\");\n/* harmony import */ var _react_spring_web__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @react-spring/web */ \"(pages-dir-browser)/./node_modules/@react-spring/web/dist/react-spring_web.modern.mjs\");\n\nvar _s = $RefreshSig$();\n\n\n\n\n\n// 요소별 컬러 세트\nconst COLOR_SETS = [\n    [\n        0x3498db,\n        0xe74c3c,\n        0xf1c40f\n    ],\n    [\n        0x2ecc40,\n        0x9b59b6,\n        0xe67e22\n    ],\n    [\n        0x1abc9c,\n        0xff6f61,\n        0x8e44ad\n    ]\n];\n// 카메라 프리셋: 기본 뷰 1개 + 얼굴 클로즈업 2개\nconst CAMERA_PRESETS = [\n    // 기본 뷰\n    {\n        pos: {\n            x: 2.2,\n            y: -1.2,\n            z: 1.9\n        },\n        look: {\n            x: 0.7,\n            y: -1.1,\n            z: 0.4\n        }\n    },\n    // 얼굴 클로즈업 1\n    {\n        pos: {\n            x: 0.8,\n            y: -0.7,\n            z: 0.9\n        },\n        look: {\n            x: 0.5,\n            y: -1.0,\n            z: 0.4\n        }\n    },\n    // 얼굴 클로즈업 2 (약간 아래에서)\n    {\n        pos: {\n            x: 0.5,\n            y: -1.1,\n            z: 0.5\n        },\n        look: {\n            x: 0,\n            y: -1.1,\n            z: 0\n        }\n    }\n];\n// 슬롯 이미지 목록\nconst SLOT_IMAGES = [\n    '/2d/11.png',\n    '/2d/22.png',\n    '/2d/33.png',\n    '/2d/44.png'\n];\nfunction getRandomSlotImage() {\n    return SLOT_IMAGES[Math.floor(Math.random() * SLOT_IMAGES.length)];\n}\nfunction getRandomInt(min, max) {\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\nfunction CharacterViewer() {\n    _s();\n    const mountRef = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(null);\n    const [colorIdx, setColorIdx] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(0);\n    const [springProps, api] = (0,_react_spring_web__WEBPACK_IMPORTED_MODULE_3__.useSpring)({\n        \"CharacterViewer.useSpring\": ()=>({\n                camX: CAMERA_PRESETS[0].pos.x,\n                camY: CAMERA_PRESETS[0].pos.y,\n                camZ: CAMERA_PRESETS[0].pos.z,\n                lookX: CAMERA_PRESETS[0].look.x,\n                lookY: CAMERA_PRESETS[0].look.y,\n                lookZ: CAMERA_PRESETS[0].look.z,\n                config: {\n                    tension: 220,\n                    friction: 22\n                }\n            })\n    }[\"CharacterViewer.useSpring\"]);\n    const cameraRef = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)();\n    const rendererRef = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)();\n    const sceneRef = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)();\n    const lightRef = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)();\n    const spotTargetRef = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)();\n    const modelRef = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)();\n    const colorTimer = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)();\n    const originalColors = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)([]);\n    const [slotItems, setSlotItems] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)([]);\n    // 컬러 애니메이션(그라데이션) 함수\n    function animateColor(current, target) {\n        let duration = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 1000;\n        let start = null;\n        const from = current.clone();\n        function step(ts) {\n            if (!start) start = ts;\n            const t = Math.min((ts - start) / duration, 1);\n            current.r = from.r + (target.r - from.r) * t;\n            current.g = from.g + (target.g - from.g) * t;\n            current.b = from.b + (target.b - from.b) * t;\n            if (rendererRef.current && cameraRef.current && sceneRef.current) {\n                rendererRef.current.render(sceneRef.current, cameraRef.current);\n            }\n            if (t < 1) {\n                requestAnimationFrame(step);\n            }\n        }\n        requestAnimationFrame(step);\n    }\n    // 컬러 변경 함수 (요소별로 다른 색상 적용)\n    const applyColor = (idx)=>{\n        const model = modelRef.current;\n        if (!model) return;\n        const colorSet = COLOR_SETS[idx % COLOR_SETS.length];\n        let meshIdx = 0;\n        model.traverse((child)=>{\n            if (child.isMesh && child.material && child.geometry && child.geometry.attributes.uv) {\n                const origColor = originalColors.current[child.uuid] || child.material.color;\n                // 완전 화이트(1,1,1)만 제외\n                if (!(origColor.r === 1 && origColor.g === 1 && origColor.b === 1)) {\n                    if (idx === 0) {\n                        // 원래색 복원\n                        if (originalColors.current[child.uuid]) {\n                            animateColor(child.material.color, originalColors.current[child.uuid]);\n                        }\n                    } else {\n                        if (!originalColors.current[child.uuid]) {\n                            originalColors.current[child.uuid] = child.material.color.clone();\n                        }\n                        const targetColor = new three__WEBPACK_IMPORTED_MODULE_4__.Color(colorSet[meshIdx % colorSet.length]);\n                        animateColor(child.material.color, targetColor);\n                        meshIdx++;\n                    }\n                }\n            }\n        });\n        if (rendererRef.current && cameraRef.current && sceneRef.current) {\n            rendererRef.current.render(sceneRef.current, cameraRef.current);\n        }\n    };\n    // 자동 컬러 변경 타이머\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)({\n        \"CharacterViewer.useEffect\": ()=>{\n            if (colorTimer.current) clearInterval(colorTimer.current);\n            colorTimer.current = setInterval({\n                \"CharacterViewer.useEffect\": ()=>{\n                    setColorIdx({\n                        \"CharacterViewer.useEffect\": (prev)=>(prev + 1) % (COLOR_SETS.length + 1)\n                    }[\"CharacterViewer.useEffect\"]);\n                }\n            }[\"CharacterViewer.useEffect\"], 3000);\n            return ({\n                \"CharacterViewer.useEffect\": ()=>clearInterval(colorTimer.current)\n            })[\"CharacterViewer.useEffect\"];\n        }\n    }[\"CharacterViewer.useEffect\"], []);\n    // 컬러 인덱스가 바뀔 때마다 적용 + 카메라 스프링 이동\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)({\n        \"CharacterViewer.useEffect\": ()=>{\n            applyColor(colorIdx);\n            const preset = CAMERA_PRESETS[colorIdx % CAMERA_PRESETS.length];\n            api.start({\n                camX: preset.pos.x,\n                camY: preset.pos.y,\n                camZ: preset.pos.z,\n                lookX: preset.look.x,\n                lookY: preset.look.y,\n                lookZ: preset.look.z,\n                config: {\n                    tension: 220,\n                    friction: 22\n                }\n            });\n        }\n    }[\"CharacterViewer.useEffect\"], [\n        colorIdx\n    ]);\n    // 슬롯 아이템 생성 (좌/우 각각 2~4개씩)\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)({\n        \"CharacterViewer.useEffect\": ()=>{\n            function createSlotItems() {\n                const left = Array.from({\n                    length: getRandomInt(2, 4)\n                }, {\n                    \"CharacterViewer.useEffect.createSlotItems.left\": (_, i)=>({\n                            key: \"l\".concat(Date.now(), \"_\").concat(i, \"_\").concat(Math.random()),\n                            side: 'left',\n                            img: getRandomSlotImage(),\n                            delay: getRandomInt(0, 1000),\n                            duration: getRandomInt(1200, 1800),\n                            rotate: getRandomInt(1, 2) * 360\n                        })\n                }[\"CharacterViewer.useEffect.createSlotItems.left\"]);\n                const right = Array.from({\n                    length: getRandomInt(2, 4)\n                }, {\n                    \"CharacterViewer.useEffect.createSlotItems.right\": (_, i)=>({\n                            key: \"r\".concat(Date.now(), \"_\").concat(i, \"_\").concat(Math.random()),\n                            side: 'right',\n                            img: getRandomSlotImage(),\n                            delay: getRandomInt(0, 1000),\n                            duration: getRandomInt(1200, 1800),\n                            rotate: getRandomInt(1, 2) * 360\n                        })\n                }[\"CharacterViewer.useEffect.createSlotItems.right\"]);\n                return [\n                    ...left,\n                    ...right\n                ];\n            }\n            setSlotItems(createSlotItems());\n            // 컬러 변경 타이밍에 맞춰 슬롯도 새로 생성\n            const timer = setInterval({\n                \"CharacterViewer.useEffect.timer\": ()=>{\n                    setSlotItems(createSlotItems());\n                }\n            }[\"CharacterViewer.useEffect.timer\"], 3000);\n            return ({\n                \"CharacterViewer.useEffect\": ()=>clearInterval(timer)\n            })[\"CharacterViewer.useEffect\"];\n        }\n    }[\"CharacterViewer.useEffect\"], []);\n    // 슬롯 아이템이 컬러 변경 타이밍에 맞춰 새로 생성되도록 colorIdx 의존성 추가\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)({\n        \"CharacterViewer.useEffect\": ()=>{\n            function createSlotItems() {\n                const left = Array.from({\n                    length: getRandomInt(2, 4)\n                }, {\n                    \"CharacterViewer.useEffect.createSlotItems.left\": (_, i)=>({\n                            key: \"l\".concat(Date.now(), \"_\").concat(i, \"_\").concat(Math.random()),\n                            side: 'left',\n                            img: getRandomSlotImage(),\n                            delay: getRandomInt(0, 1000),\n                            duration: getRandomInt(1200, 1800),\n                            rotate: getRandomInt(1, 2) * 360\n                        })\n                }[\"CharacterViewer.useEffect.createSlotItems.left\"]);\n                const right = Array.from({\n                    length: getRandomInt(2, 4)\n                }, {\n                    \"CharacterViewer.useEffect.createSlotItems.right\": (_, i)=>({\n                            key: \"r\".concat(Date.now(), \"_\").concat(i, \"_\").concat(Math.random()),\n                            side: 'right',\n                            img: getRandomSlotImage(),\n                            delay: getRandomInt(0, 1000),\n                            duration: getRandomInt(1200, 1800),\n                            rotate: getRandomInt(1, 2) * 360\n                        })\n                }[\"CharacterViewer.useEffect.createSlotItems.right\"]);\n                return [\n                    ...left,\n                    ...right\n                ];\n            }\n            setSlotItems(createSlotItems());\n        }\n    }[\"CharacterViewer.useEffect\"], [\n        colorIdx\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)({\n        \"CharacterViewer.useEffect\": ()=>{\n            const width = window.innerWidth;\n            const height = window.innerHeight;\n            const scene = new three__WEBPACK_IMPORTED_MODULE_4__.Scene();\n            scene.background = new three__WEBPACK_IMPORTED_MODULE_4__.Color(0x232526);\n            sceneRef.current = scene;\n            const camera = new three__WEBPACK_IMPORTED_MODULE_4__.PerspectiveCamera(45, width / height, 0.1, 1000);\n            cameraRef.current = camera;\n            const renderer = new three__WEBPACK_IMPORTED_MODULE_4__.WebGLRenderer({\n                antialias: true,\n                alpha: true\n            });\n            renderer.setPixelRatio(window.devicePixelRatio);\n            renderer.setSize(width, height);\n            rendererRef.current = renderer;\n            mountRef.current.appendChild(renderer.domElement);\n            // 조명\n            const ambientLight = new three__WEBPACK_IMPORTED_MODULE_4__.AmbientLight(0xffffff, 1.5);\n            scene.add(ambientLight);\n            // SpotLight\n            const spotTarget = new three__WEBPACK_IMPORTED_MODULE_4__.Object3D();\n            spotTarget.position.set(CAMERA_PRESETS[0].look.x, CAMERA_PRESETS[0].look.y, CAMERA_PRESETS[0].look.z);\n            scene.add(spotTarget);\n            spotTargetRef.current = spotTarget;\n            const spotLight = new three__WEBPACK_IMPORTED_MODULE_4__.SpotLight(0xffffff, 10, 30, Math.PI / 6, 0.2, 1);\n            spotLight.position.set(0, 2, 6);\n            spotLight.target = spotTarget;\n            spotLight.castShadow = true;\n            scene.add(spotLight);\n            lightRef.current = spotLight;\n            // 백라이트\n            const backLight = new three__WEBPACK_IMPORTED_MODULE_4__.DirectionalLight(0xfff2cc, 1);\n            backLight.position.set(0, 2, -6);\n            scene.add(backLight);\n            // GLTF 모델 로드\n            const loader = new three_examples_jsm_loaders_GLTFLoader__WEBPACK_IMPORTED_MODULE_5__.GLTFLoader();\n            loader.load('/3d/kikiki.glb', {\n                \"CharacterViewer.useEffect\": (gltf)=>{\n                    const model = gltf.scene;\n                    model.position.set(0, -1.2, 0);\n                    model.scale.set(1.1, 1.1, 1.1);\n                    scene.add(model);\n                    modelRef.current = model;\n                    // 원래색 저장\n                    model.traverse({\n                        \"CharacterViewer.useEffect\": (child)=>{\n                            if (child.isMesh && child.material) {\n                                originalColors.current[child.uuid] = child.material.color.clone();\n                            }\n                        }\n                    }[\"CharacterViewer.useEffect\"]);\n                    camera.position.set(CAMERA_PRESETS[0].pos.x, CAMERA_PRESETS[0].pos.y, CAMERA_PRESETS[0].pos.z);\n                    camera.lookAt(CAMERA_PRESETS[0].look.x, CAMERA_PRESETS[0].look.y, CAMERA_PRESETS[0].look.z);\n                    renderer.render(scene, camera);\n                    // 컬러 적용\n                    applyColor(colorIdx);\n                }\n            }[\"CharacterViewer.useEffect\"]);\n            camera.position.set(CAMERA_PRESETS[0].pos.x, CAMERA_PRESETS[0].pos.y, CAMERA_PRESETS[0].pos.z);\n            camera.lookAt(CAMERA_PRESETS[0].look.x, CAMERA_PRESETS[0].look.y, CAMERA_PRESETS[0].look.z);\n            // 리사이즈 대응\n            const handleResize = {\n                \"CharacterViewer.useEffect.handleResize\": ()=>{\n                    const newWidth = window.innerWidth;\n                    const newHeight = window.innerHeight;\n                    camera.aspect = newWidth / newHeight;\n                    camera.updateProjectionMatrix();\n                    renderer.setSize(newWidth, newHeight);\n                    renderer.render(scene, camera);\n                }\n            }[\"CharacterViewer.useEffect.handleResize\"];\n            window.addEventListener('resize', handleResize);\n            return ({\n                \"CharacterViewer.useEffect\": ()=>{\n                    window.removeEventListener('resize', handleResize);\n                    if (mountRef.current && renderer.domElement.parentNode === mountRef.current) {\n                        mountRef.current.removeChild(renderer.domElement);\n                    }\n                }\n            })[\"CharacterViewer.useEffect\"];\n        // eslint-disable-next-line\n        }\n    }[\"CharacterViewer.useEffect\"], []);\n    // 카메라 위치/타겟 스프링 적용\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)({\n        \"CharacterViewer.useEffect\": ()=>{\n            let raf;\n            function animate() {\n                if (!cameraRef.current || !rendererRef.current || !sceneRef.current || !spotTargetRef.current) return;\n                cameraRef.current.position.set(springProps.camX.get(), springProps.camY.get(), springProps.camZ.get());\n                cameraRef.current.lookAt(springProps.lookX.get(), springProps.lookY.get(), springProps.lookZ.get());\n                spotTargetRef.current.position.set(springProps.lookX.get(), springProps.lookY.get(), springProps.lookZ.get());\n                rendererRef.current.render(sceneRef.current, cameraRef.current);\n                raf = requestAnimationFrame(animate);\n            }\n            animate();\n            return ({\n                \"CharacterViewer.useEffect\": ()=>raf && cancelAnimationFrame(raf)\n            })[\"CharacterViewer.useEffect\"];\n        }\n    }[\"CharacterViewer.useEffect\"], [\n        springProps\n    ]);\n    const handleColorSlide = (dir)=>{\n        setColorIdx((prev)=>{\n            if (dir === 'left') {\n                return (prev - 1 + (COLOR_SETS.length + 1)) % (COLOR_SETS.length + 1);\n            } else {\n                return (prev + 1) % (COLOR_SETS.length + 1);\n            }\n        });\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n        children: [\n            slotItems.map((item)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"img\", {\n                    src: item.img,\n                    alt: \"slot\",\n                    style: {\n                        position: 'fixed',\n                        top: item.side === 'left' ? getRandomInt(10, 60) + 'vh' : getRandomInt(10, 60) + 'vh',\n                        left: item.side === 'left' ? 0 : undefined,\n                        right: item.side === 'right' ? 0 : undefined,\n                        width: 64,\n                        height: 64,\n                        zIndex: 20,\n                        pointerEvents: 'none',\n                        transform: \"translateY(-120vh) rotateX(0deg)\",\n                        animation: \"slot-move-\".concat(item.side, \"-\").concat(item.key, \" \").concat(item.duration, \"ms cubic-bezier(0.4,0.2,0.2,1) \").concat(item.delay, \"ms forwards\")\n                    },\n                    className: styled_jsx_style__WEBPACK_IMPORTED_MODULE_1___default().dynamic([\n                        [\n                            \"b31c0f53b58c105b\",\n                            [\n                                slotItems.map((item)=>\"\\n          @keyframes slot-move-\".concat(item.side, \"-\").concat(item.key, \" {\\n            0% {\\n              transform: translateY(-120vh) rotateX(0deg);\\n              opacity: 0.2;\\n            }\\n            10% {\\n              opacity: 1;\\n            }\\n            80% {\\n              opacity: 1;\\n            }\\n            100% {\\n              transform: translateY(120vh) rotateX(\").concat(item.rotate, \"deg);\\n              opacity: 0;\\n            }\\n          }\\n        \")).join('')\n                            ]\n                        ]\n                    ])\n                }, item.key, false, {\n                    fileName: \"C:\\\\Users\\\\82104\\\\Desktop\\\\sagakweb\\\\components\\\\CharacterViewer.js\",\n                    lineNumber: 301,\n                    columnNumber: 9\n                }, this)),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((styled_jsx_style__WEBPACK_IMPORTED_MODULE_1___default()), {\n                id: \"b31c0f53b58c105b\",\n                dynamic: [\n                    slotItems.map((item)=>\"\\n          @keyframes slot-move-\".concat(item.side, \"-\").concat(item.key, \" {\\n            0% {\\n              transform: translateY(-120vh) rotateX(0deg);\\n              opacity: 0.2;\\n            }\\n            10% {\\n              opacity: 1;\\n            }\\n            80% {\\n              opacity: 1;\\n            }\\n            100% {\\n              transform: translateY(120vh) rotateX(\").concat(item.rotate, \"deg);\\n              opacity: 0;\\n            }\\n          }\\n        \")).join('')\n                ],\n                children: \"\".concat(slotItems.map((item)=>\"\\n          @keyframes slot-move-\".concat(item.side, \"-\").concat(item.key, \" {\\n            0% {\\n              transform: translateY(-120vh) rotateX(0deg);\\n              opacity: 0.2;\\n            }\\n            10% {\\n              opacity: 1;\\n            }\\n            80% {\\n              opacity: 1;\\n            }\\n            100% {\\n              transform: translateY(120vh) rotateX(\").concat(item.rotate, \"deg);\\n              opacity: 0;\\n            }\\n          }\\n        \")).join(''), \"      \")\n            }, void 0, false, void 0, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                ref: mountRef,\n                style: {\n                    width: '100vw',\n                    height: '100vh',\n                    position: 'absolute',\n                    top: 0,\n                    left: 0\n                },\n                className: styled_jsx_style__WEBPACK_IMPORTED_MODULE_1___default().dynamic([\n                    [\n                        \"b31c0f53b58c105b\",\n                        [\n                            slotItems.map((item)=>\"\\n          @keyframes slot-move-\".concat(item.side, \"-\").concat(item.key, \" {\\n            0% {\\n              transform: translateY(-120vh) rotateX(0deg);\\n              opacity: 0.2;\\n            }\\n            10% {\\n              opacity: 1;\\n            }\\n            80% {\\n              opacity: 1;\\n            }\\n            100% {\\n              transform: translateY(120vh) rotateX(\").concat(item.rotate, \"deg);\\n              opacity: 0;\\n            }\\n          }\\n        \")).join('')\n                        ]\n                    ]\n                ])\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\82104\\\\Desktop\\\\sagakweb\\\\components\\\\CharacterViewer.js\",\n                lineNumber: 341,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                onClick: ()=>handleColorSlide('left'),\n                style: {\n                    position: 'fixed',\n                    top: '50%',\n                    left: 0,\n                    transform: 'translateY(-50%)',\n                    fontSize: 28,\n                    borderRadius: '0 12px 12px 0',\n                    border: 'none',\n                    background: '#232526cc',\n                    color: '#fff',\n                    width: 48,\n                    height: 64,\n                    cursor: 'pointer',\n                    zIndex: 30\n                },\n                className: styled_jsx_style__WEBPACK_IMPORTED_MODULE_1___default().dynamic([\n                    [\n                        \"b31c0f53b58c105b\",\n                        [\n                            slotItems.map((item)=>\"\\n          @keyframes slot-move-\".concat(item.side, \"-\").concat(item.key, \" {\\n            0% {\\n              transform: translateY(-120vh) rotateX(0deg);\\n              opacity: 0.2;\\n            }\\n            10% {\\n              opacity: 1;\\n            }\\n            80% {\\n              opacity: 1;\\n            }\\n            100% {\\n              transform: translateY(120vh) rotateX(\").concat(item.rotate, \"deg);\\n              opacity: 0;\\n            }\\n          }\\n        \")).join('')\n                        ]\n                    ]\n                ]),\n                children: \"◀\"\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\82104\\\\Desktop\\\\sagakweb\\\\components\\\\CharacterViewer.js\",\n                lineNumber: 342,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                onClick: ()=>handleColorSlide('right'),\n                style: {\n                    position: 'fixed',\n                    top: '50%',\n                    right: 0,\n                    transform: 'translateY(-50%)',\n                    fontSize: 28,\n                    borderRadius: '12px 0 0 12px',\n                    border: 'none',\n                    background: '#232526cc',\n                    color: '#fff',\n                    width: 48,\n                    height: 64,\n                    cursor: 'pointer',\n                    zIndex: 30\n                },\n                className: styled_jsx_style__WEBPACK_IMPORTED_MODULE_1___default().dynamic([\n                    [\n                        \"b31c0f53b58c105b\",\n                        [\n                            slotItems.map((item)=>\"\\n          @keyframes slot-move-\".concat(item.side, \"-\").concat(item.key, \" {\\n            0% {\\n              transform: translateY(-120vh) rotateX(0deg);\\n              opacity: 0.2;\\n            }\\n            10% {\\n              opacity: 1;\\n            }\\n            80% {\\n              opacity: 1;\\n            }\\n            100% {\\n              transform: translateY(120vh) rotateX(\").concat(item.rotate, \"deg);\\n              opacity: 0;\\n            }\\n          }\\n        \")).join('')\n                        ]\n                    ]\n                ]),\n                children: \"▶\"\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\82104\\\\Desktop\\\\sagakweb\\\\components\\\\CharacterViewer.js\",\n                lineNumber: 359,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true);\n}\n_s(CharacterViewer, \"CqXh56MJyB4KE4z2l4il9whzF8I=\", false, function() {\n    return [\n        _react_spring_web__WEBPACK_IMPORTED_MODULE_3__.useSpring\n    ];\n});\n_c = CharacterViewer;\nvar _c;\n$RefreshReg$(_c, \"CharacterViewer\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./components/CharacterViewer.js\n"));

/***/ }),

/***/ "(pages-dir-browser)/./node_modules/next/dist/compiled/client-only/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/next/dist/compiled/client-only/index.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {



/***/ }),

/***/ "(pages-dir-browser)/./node_modules/styled-jsx/dist/index/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/styled-jsx/dist/index/index.js ***!
  \*****************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("/* provided dependency */ var process = __webpack_require__(/*! process */ \"(pages-dir-browser)/./node_modules/next/dist/build/polyfills/process.js\");\n\nvar _s = $RefreshSig$(), _s1 = $RefreshSig$(), _s2 = $RefreshSig$();\n__webpack_require__(/*! client-only */ \"(pages-dir-browser)/./node_modules/next/dist/compiled/client-only/index.js\");\nvar React = __webpack_require__(/*! react */ \"(pages-dir-browser)/./node_modules/react/index.js\");\nfunction _interopDefaultLegacy(e) {\n    return e && typeof e === 'object' && 'default' in e ? e : {\n        'default': e\n    };\n}\nvar React__default = /*#__PURE__*/ _interopDefaultLegacy(React);\n_c = React__default;\n/*\nBased on Glamor's sheet\nhttps://github.com/threepointone/glamor/blob/667b480d31b3721a905021b26e1290ce92ca2879/src/sheet.js\n*/ function _defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n}\nvar isProd = typeof process !== \"undefined\" && process.env && \"development\" === \"production\";\nvar isString = function(o) {\n    return Object.prototype.toString.call(o) === \"[object String]\";\n};\nvar StyleSheet = /*#__PURE__*/ function() {\n    function StyleSheet(param) {\n        var ref = param === void 0 ? {} : param, _name = ref.name, name = _name === void 0 ? \"stylesheet\" : _name, _optimizeForSpeed = ref.optimizeForSpeed, optimizeForSpeed = _optimizeForSpeed === void 0 ? isProd : _optimizeForSpeed;\n        invariant$1(isString(name), \"`name` must be a string\");\n        this._name = name;\n        this._deletedRulePlaceholder = \"#\" + name + \"-deleted-rule____{}\";\n        invariant$1(typeof optimizeForSpeed === \"boolean\", \"`optimizeForSpeed` must be a boolean\");\n        this._optimizeForSpeed = optimizeForSpeed;\n        this._serverSheet = undefined;\n        this._tags = [];\n        this._injected = false;\n        this._rulesCount = 0;\n        var node =  true && document.querySelector('meta[property=\"csp-nonce\"]');\n        this._nonce = node ? node.getAttribute(\"content\") : null;\n    }\n    var _proto = StyleSheet.prototype;\n    _proto.setOptimizeForSpeed = function setOptimizeForSpeed(bool) {\n        invariant$1(typeof bool === \"boolean\", \"`setOptimizeForSpeed` accepts a boolean\");\n        invariant$1(this._rulesCount === 0, \"optimizeForSpeed cannot be when rules have already been inserted\");\n        this.flush();\n        this._optimizeForSpeed = bool;\n        this.inject();\n    };\n    _proto.isOptimizeForSpeed = function isOptimizeForSpeed() {\n        return this._optimizeForSpeed;\n    };\n    _proto.inject = function inject() {\n        var _this = this;\n        invariant$1(!this._injected, \"sheet already injected\");\n        this._injected = true;\n        if ( true && this._optimizeForSpeed) {\n            this._tags[0] = this.makeStyleTag(this._name);\n            this._optimizeForSpeed = \"insertRule\" in this.getSheet();\n            if (!this._optimizeForSpeed) {\n                if (!isProd) {\n                    console.warn(\"StyleSheet: optimizeForSpeed mode not supported falling back to standard mode.\");\n                }\n                this.flush();\n                this._injected = true;\n            }\n            return;\n        }\n        this._serverSheet = {\n            cssRules: [],\n            insertRule: function(rule, index) {\n                if (typeof index === \"number\") {\n                    _this._serverSheet.cssRules[index] = {\n                        cssText: rule\n                    };\n                } else {\n                    _this._serverSheet.cssRules.push({\n                        cssText: rule\n                    });\n                }\n                return index;\n            },\n            deleteRule: function(index) {\n                _this._serverSheet.cssRules[index] = null;\n            }\n        };\n    };\n    _proto.getSheetForTag = function getSheetForTag(tag) {\n        if (tag.sheet) {\n            return tag.sheet;\n        }\n        // this weirdness brought to you by firefox\n        for(var i = 0; i < document.styleSheets.length; i++){\n            if (document.styleSheets[i].ownerNode === tag) {\n                return document.styleSheets[i];\n            }\n        }\n    };\n    _proto.getSheet = function getSheet() {\n        return this.getSheetForTag(this._tags[this._tags.length - 1]);\n    };\n    _proto.insertRule = function insertRule(rule, index) {\n        invariant$1(isString(rule), \"`insertRule` accepts only strings\");\n        if (false) {}\n        if (this._optimizeForSpeed) {\n            var sheet = this.getSheet();\n            if (typeof index !== \"number\") {\n                index = sheet.cssRules.length;\n            }\n            // this weirdness for perf, and chrome's weird bug\n            // https://stackoverflow.com/questions/20007992/chrome-suddenly-stopped-accepting-insertrule\n            try {\n                sheet.insertRule(rule, index);\n            } catch (error) {\n                if (!isProd) {\n                    console.warn(\"StyleSheet: illegal rule: \\n\\n\" + rule + \"\\n\\nSee https://stackoverflow.com/q/20007992 for more info\");\n                }\n                return -1;\n            }\n        } else {\n            var insertionPoint = this._tags[index];\n            this._tags.push(this.makeStyleTag(this._name, rule, insertionPoint));\n        }\n        return this._rulesCount++;\n    };\n    _proto.replaceRule = function replaceRule(index, rule) {\n        if (this._optimizeForSpeed || \"object\" === \"undefined\") {\n            var sheet =  true ? this.getSheet() : 0;\n            if (!rule.trim()) {\n                rule = this._deletedRulePlaceholder;\n            }\n            if (!sheet.cssRules[index]) {\n                // @TBD Should we throw an error?\n                return index;\n            }\n            sheet.deleteRule(index);\n            try {\n                sheet.insertRule(rule, index);\n            } catch (error) {\n                if (!isProd) {\n                    console.warn(\"StyleSheet: illegal rule: \\n\\n\" + rule + \"\\n\\nSee https://stackoverflow.com/q/20007992 for more info\");\n                }\n                // In order to preserve the indices we insert a deleteRulePlaceholder\n                sheet.insertRule(this._deletedRulePlaceholder, index);\n            }\n        } else {\n            var tag = this._tags[index];\n            invariant$1(tag, \"old rule at index `\" + index + \"` not found\");\n            tag.textContent = rule;\n        }\n        return index;\n    };\n    _proto.deleteRule = function deleteRule(index) {\n        if (false) {}\n        if (this._optimizeForSpeed) {\n            this.replaceRule(index, \"\");\n        } else {\n            var tag = this._tags[index];\n            invariant$1(tag, \"rule at index `\" + index + \"` not found\");\n            tag.parentNode.removeChild(tag);\n            this._tags[index] = null;\n        }\n    };\n    _proto.flush = function flush() {\n        this._injected = false;\n        this._rulesCount = 0;\n        if (true) {\n            this._tags.forEach(function(tag) {\n                return tag && tag.parentNode.removeChild(tag);\n            });\n            this._tags = [];\n        } else {}\n    };\n    _proto.cssRules = function cssRules() {\n        var _this = this;\n        if (false) {}\n        return this._tags.reduce(function(rules, tag) {\n            if (tag) {\n                rules = rules.concat(Array.prototype.map.call(_this.getSheetForTag(tag).cssRules, function(rule) {\n                    return rule.cssText === _this._deletedRulePlaceholder ? null : rule;\n                }));\n            } else {\n                rules.push(null);\n            }\n            return rules;\n        }, []);\n    };\n    _proto.makeStyleTag = function makeStyleTag(name, cssString, relativeToTag) {\n        if (cssString) {\n            invariant$1(isString(cssString), \"makeStyleTag accepts only strings as second parameter\");\n        }\n        var tag = document.createElement(\"style\");\n        if (this._nonce) tag.setAttribute(\"nonce\", this._nonce);\n        tag.type = \"text/css\";\n        tag.setAttribute(\"data-\" + name, \"\");\n        if (cssString) {\n            tag.appendChild(document.createTextNode(cssString));\n        }\n        var head = document.head || document.getElementsByTagName(\"head\")[0];\n        if (relativeToTag) {\n            head.insertBefore(tag, relativeToTag);\n        } else {\n            head.appendChild(tag);\n        }\n        return tag;\n    };\n    _createClass(StyleSheet, [\n        {\n            key: \"length\",\n            get: function get() {\n                return this._rulesCount;\n            }\n        }\n    ]);\n    return StyleSheet;\n}();\nfunction invariant$1(condition, message) {\n    if (!condition) {\n        throw new Error(\"StyleSheet: \" + message + \".\");\n    }\n}\nfunction hash(str) {\n    var _$hash = 5381, i = str.length;\n    while(i){\n        _$hash = _$hash * 33 ^ str.charCodeAt(--i);\n    }\n    /* JavaScript does bitwise operations (like XOR, above) on 32-bit signed\n   * integers. Since we want the results to be always positive, convert the\n   * signed int to an unsigned by doing an unsigned bitshift. */ return _$hash >>> 0;\n}\nvar stringHash = hash;\nvar sanitize = function(rule) {\n    return rule.replace(/\\/style/gi, \"\\\\/style\");\n};\nvar cache = {};\n/**\n * computeId\n *\n * Compute and memoize a jsx id from a basedId and optionally props.\n */ function computeId(baseId, props) {\n    if (!props) {\n        return \"jsx-\" + baseId;\n    }\n    var propsToString = String(props);\n    var key = baseId + propsToString;\n    if (!cache[key]) {\n        cache[key] = \"jsx-\" + stringHash(baseId + \"-\" + propsToString);\n    }\n    return cache[key];\n}\n/**\n * computeSelector\n *\n * Compute and memoize dynamic selectors.\n */ function computeSelector(id, css) {\n    var selectoPlaceholderRegexp = /__jsx-style-dynamic-selector/g;\n    // Sanitize SSR-ed CSS.\n    // Client side code doesn't need to be sanitized since we use\n    // document.createTextNode (dev) and the CSSOM api sheet.insertRule (prod).\n    if (false) {}\n    var idcss = id + css;\n    if (!cache[idcss]) {\n        cache[idcss] = css.replace(selectoPlaceholderRegexp, id);\n    }\n    return cache[idcss];\n}\nfunction mapRulesToStyle(cssRules, options) {\n    if (options === void 0) options = {};\n    return cssRules.map(function(args) {\n        var id = args[0];\n        var css = args[1];\n        return /*#__PURE__*/ React__default[\"default\"].createElement(\"style\", {\n            id: \"__\" + id,\n            // Avoid warnings upon render with a key\n            key: \"__\" + id,\n            nonce: options.nonce ? options.nonce : undefined,\n            dangerouslySetInnerHTML: {\n                __html: css\n            }\n        });\n    });\n}\nvar StyleSheetRegistry = /*#__PURE__*/ function() {\n    function StyleSheetRegistry(param) {\n        var ref = param === void 0 ? {} : param, _styleSheet = ref.styleSheet, styleSheet = _styleSheet === void 0 ? null : _styleSheet, _optimizeForSpeed = ref.optimizeForSpeed, optimizeForSpeed = _optimizeForSpeed === void 0 ? false : _optimizeForSpeed;\n        this._sheet = styleSheet || new StyleSheet({\n            name: \"styled-jsx\",\n            optimizeForSpeed: optimizeForSpeed\n        });\n        this._sheet.inject();\n        if (styleSheet && typeof optimizeForSpeed === \"boolean\") {\n            this._sheet.setOptimizeForSpeed(optimizeForSpeed);\n            this._optimizeForSpeed = this._sheet.isOptimizeForSpeed();\n        }\n        this._fromServer = undefined;\n        this._indices = {};\n        this._instancesCounts = {};\n    }\n    var _proto = StyleSheetRegistry.prototype;\n    _proto.add = function add(props) {\n        var _this = this;\n        if (undefined === this._optimizeForSpeed) {\n            this._optimizeForSpeed = Array.isArray(props.children);\n            this._sheet.setOptimizeForSpeed(this._optimizeForSpeed);\n            this._optimizeForSpeed = this._sheet.isOptimizeForSpeed();\n        }\n        if ( true && !this._fromServer) {\n            this._fromServer = this.selectFromServer();\n            this._instancesCounts = Object.keys(this._fromServer).reduce(function(acc, tagName) {\n                acc[tagName] = 0;\n                return acc;\n            }, {});\n        }\n        var ref = this.getIdAndRules(props), styleId = ref.styleId, rules = ref.rules;\n        // Deduping: just increase the instances count.\n        if (styleId in this._instancesCounts) {\n            this._instancesCounts[styleId] += 1;\n            return;\n        }\n        var indices = rules.map(function(rule) {\n            return _this._sheet.insertRule(rule);\n        }) // Filter out invalid rules\n        .filter(function(index) {\n            return index !== -1;\n        });\n        this._indices[styleId] = indices;\n        this._instancesCounts[styleId] = 1;\n    };\n    _proto.remove = function remove(props) {\n        var _this = this;\n        var styleId = this.getIdAndRules(props).styleId;\n        invariant(styleId in this._instancesCounts, \"styleId: `\" + styleId + \"` not found\");\n        this._instancesCounts[styleId] -= 1;\n        if (this._instancesCounts[styleId] < 1) {\n            var tagFromServer = this._fromServer && this._fromServer[styleId];\n            if (tagFromServer) {\n                tagFromServer.parentNode.removeChild(tagFromServer);\n                delete this._fromServer[styleId];\n            } else {\n                this._indices[styleId].forEach(function(index) {\n                    return _this._sheet.deleteRule(index);\n                });\n                delete this._indices[styleId];\n            }\n            delete this._instancesCounts[styleId];\n        }\n    };\n    _proto.update = function update(props, nextProps) {\n        this.add(nextProps);\n        this.remove(props);\n    };\n    _proto.flush = function flush() {\n        this._sheet.flush();\n        this._sheet.inject();\n        this._fromServer = undefined;\n        this._indices = {};\n        this._instancesCounts = {};\n    };\n    _proto.cssRules = function cssRules() {\n        var _this = this;\n        var fromServer = this._fromServer ? Object.keys(this._fromServer).map(function(styleId) {\n            return [\n                styleId,\n                _this._fromServer[styleId]\n            ];\n        }) : [];\n        var cssRules = this._sheet.cssRules();\n        return fromServer.concat(Object.keys(this._indices).map(function(styleId) {\n            return [\n                styleId,\n                _this._indices[styleId].map(function(index) {\n                    return cssRules[index].cssText;\n                }).join(_this._optimizeForSpeed ? \"\" : \"\\n\")\n            ];\n        }) // filter out empty rules\n        .filter(function(rule) {\n            return Boolean(rule[1]);\n        }));\n    };\n    _proto.styles = function styles(options) {\n        return mapRulesToStyle(this.cssRules(), options);\n    };\n    _proto.getIdAndRules = function getIdAndRules(props) {\n        var css = props.children, dynamic = props.dynamic, id = props.id;\n        if (dynamic) {\n            var styleId = computeId(id, dynamic);\n            return {\n                styleId: styleId,\n                rules: Array.isArray(css) ? css.map(function(rule) {\n                    return computeSelector(styleId, rule);\n                }) : [\n                    computeSelector(styleId, css)\n                ]\n            };\n        }\n        return {\n            styleId: computeId(id),\n            rules: Array.isArray(css) ? css : [\n                css\n            ]\n        };\n    };\n    /**\n   * selectFromServer\n   *\n   * Collects style tags from the document with id __jsx-XXX\n   */ _proto.selectFromServer = function selectFromServer() {\n        var elements = Array.prototype.slice.call(document.querySelectorAll('[id^=\"__jsx-\"]'));\n        return elements.reduce(function(acc, element) {\n            var id = element.id.slice(2);\n            acc[id] = element;\n            return acc;\n        }, {});\n    };\n    return StyleSheetRegistry;\n}();\nfunction invariant(condition, message) {\n    if (!condition) {\n        throw new Error(\"StyleSheetRegistry: \" + message + \".\");\n    }\n}\nvar StyleSheetContext = /*#__PURE__*/ React.createContext(null);\nStyleSheetContext.displayName = \"StyleSheetContext\";\nfunction createStyleRegistry() {\n    return new StyleSheetRegistry();\n}\nfunction StyleRegistry(param) {\n    _s();\n    var configuredRegistry = param.registry, children = param.children;\n    var rootRegistry = React.useContext(StyleSheetContext);\n    var ref = React.useState({\n        \"StyleRegistry.useState[ref]\": function() {\n            return rootRegistry || configuredRegistry || createStyleRegistry();\n        }\n    }[\"StyleRegistry.useState[ref]\"]), registry = ref[0];\n    return /*#__PURE__*/ React__default[\"default\"].createElement(StyleSheetContext.Provider, {\n        value: registry\n    }, children);\n}\n_s(StyleRegistry, \"F6PIZFsaWgcE6rBNmd+Zkq3zRoY=\");\n_c1 = StyleRegistry;\nfunction useStyleRegistry() {\n    _s1();\n    return React.useContext(StyleSheetContext);\n}\n_s1(useStyleRegistry, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n// Opt-into the new `useInsertionEffect` API in React 18, fallback to `useLayoutEffect`.\n// https://github.com/reactwg/react-18/discussions/110\nvar useInsertionEffect = React__default[\"default\"].useInsertionEffect || React__default[\"default\"].useLayoutEffect;\nvar defaultRegistry =  true ? createStyleRegistry() : 0;\nfunction JSXStyle(props) {\n    _s2();\n    var registry = defaultRegistry ? defaultRegistry : useStyleRegistry();\n    // If `registry` does not exist, we do nothing here.\n    if (!registry) {\n        return null;\n    }\n    if (false) {}\n    useInsertionEffect({\n        \"JSXStyle.useInsertionEffect\": function() {\n            registry.add(props);\n            return ({\n                \"JSXStyle.useInsertionEffect\": function() {\n                    registry.remove(props);\n                }\n            })[\"JSXStyle.useInsertionEffect\"];\n        // props.children can be string[], will be striped since id is identical\n        }\n    }[\"JSXStyle.useInsertionEffect\"], [\n        props.id,\n        String(props.dynamic)\n    ]);\n    return null;\n}\n_s2(JSXStyle, \"48Sqj1BUqkshsPdz6NEWXDn8pF4=\", false, function() {\n    return [\n        useStyleRegistry,\n        useInsertionEffect\n    ];\n});\n_c2 = JSXStyle;\nJSXStyle.dynamic = function(info) {\n    return info.map(function(tagInfo) {\n        var baseId = tagInfo[0];\n        var props = tagInfo[1];\n        return computeId(baseId, props);\n    }).join(\" \");\n};\nexports.StyleRegistry = StyleRegistry;\nexports.createStyleRegistry = createStyleRegistry;\nexports.style = JSXStyle;\nexports.useStyleRegistry = useStyleRegistry;\nvar _c, _c1, _c2;\n$RefreshReg$(_c, \"React__default\");\n$RefreshReg$(_c1, \"StyleRegistry\");\n$RefreshReg$(_c2, \"JSXStyle\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./node_modules/styled-jsx/dist/index/index.js\n"));

/***/ }),

/***/ "(pages-dir-browser)/./node_modules/styled-jsx/style.js":
/*!******************************************!*\
  !*** ./node_modules/styled-jsx/style.js ***!
  \******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\nmodule.exports = __webpack_require__(/*! ./dist/index */ \"(pages-dir-browser)/./node_modules/styled-jsx/dist/index/index.js\").style;\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9zdHlsZWQtanN4L3N0eWxlLmpzIiwibWFwcGluZ3MiOiI7QUFBQUEsbUlBQThDIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXDgyMTA0XFxEZXNrdG9wXFxzYWdha3dlYlxcbm9kZV9tb2R1bGVzXFxzdHlsZWQtanN4XFxzdHlsZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vZGlzdC9pbmRleCcpLnN0eWxlXG4iXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsInJlcXVpcmUiLCJzdHlsZSJdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./node_modules/styled-jsx/style.js\n"));

/***/ })

});