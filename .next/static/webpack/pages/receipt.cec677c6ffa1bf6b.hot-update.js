"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/receipt",{

/***/ "(pages-dir-browser)/./components/GLBPersonaAnimation.js":
/*!*******************************************!*\
  !*** ./components/GLBPersonaAnimation.js ***!
  \*******************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ GLBPersonaAnimation)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(pages-dir-browser)/./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(pages-dir-browser)/./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! three */ \"(pages-dir-browser)/./node_modules/three/build/three.module.js\");\n/* harmony import */ var three_examples_jsm_loaders_GLTFLoader__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! three/examples/jsm/loaders/GLTFLoader */ \"(pages-dir-browser)/./node_modules/three/examples/jsm/loaders/GLTFLoader.js\");\n\nvar _s = $RefreshSig$();\n\n\n\nfunction GLBPersonaAnimation(param) {\n    let { src, animate, onFinish, step, scale = 2.9, dollarPop, selectedEnv, dollarStackCount = 0 } = param;\n    _s();\n    const mountRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const modelRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const cameraRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const animatingRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(false);\n    const [popKey, setPopKey] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const popAnimFrameRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)();\n    const [fadeOverlay, setFadeOverlay] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [fadeKey, setFadeKey] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    // $ 3D 애니메이션 관련 상태를 useRef로 관리\n    const dollarMeshesRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)([]);\n    const dollarAnimsRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)([]);\n    // % 스택 관련 상태\n    const percentMeshesRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)([]);\n    // $ 스택 관련 상태\n    const stackedDollarMeshesRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)([]);\n    // $ 3D 애니메이션 관련 함수 (컴포넌트 스코프에 선언)\n    function createDollarMeshes(scene) {\n        dollarMeshesRef.current = [];\n        dollarAnimsRef.current = [];\n        for(let i = 0; i < 8; i++){\n            const fontSize = 0.48 + Math.random() * 0.12; // 사이즈 더 크게\n            const canvas = document.createElement('canvas');\n            canvas.width = 256;\n            canvas.height = 256;\n            const ctx = canvas.getContext('2d');\n            ctx.font = \"bold 200px sans-serif\";\n            ctx.textAlign = 'center';\n            ctx.textBaseline = 'middle';\n            ctx.fillStyle = '#39ff14'; // 더 진한 초록\n            ctx.strokeStyle = '#39ff14';\n            ctx.lineWidth = 10;\n            ctx.strokeText('$', 128, 128);\n            ctx.fillText('$', 128, 128);\n            const tex = new three__WEBPACK_IMPORTED_MODULE_2__.CanvasTexture(canvas);\n            const mat = new three__WEBPACK_IMPORTED_MODULE_2__.MeshBasicMaterial({\n                map: tex,\n                transparent: true,\n                opacity: 1\n            });\n            const geo = new three__WEBPACK_IMPORTED_MODULE_2__.PlaneGeometry(fontSize, fontSize);\n            const mesh = new three__WEBPACK_IMPORTED_MODULE_2__.Mesh(geo, mat);\n            // x는 -0.7~0.7, y는 -0.5에서 시작, z는 0.3~0.5(모델 바로 앞)\n            const x = (Math.random() - 0.5) * 1.4;\n            const yStart = -0.5;\n            const yEnd = 1.2 + Math.random() * 0.3;\n            const z = 0.3 + Math.random() * 0.2;\n            mesh.position.set(x, yStart, z);\n            mesh.rotation.z = Math.random() * Math.PI * 2;\n            mesh.renderOrder = 999;\n            scene.add(mesh);\n            dollarMeshesRef.current.push(mesh);\n            dollarAnimsRef.current.push({\n                x,\n                yStart,\n                yEnd,\n                z,\n                rot: (Math.random() - 0.5) * 0.04,\n                t: 0\n            });\n        }\n    }\n    function animateDollars(scene, camera, renderer, popAnimFrameRef) {\n        if (dollarMeshesRef.current.length === 0) return;\n        for(let i = 0; i < dollarMeshesRef.current.length; i++){\n            const mesh = dollarMeshesRef.current[i];\n            const anim = dollarAnimsRef.current[i];\n            anim.t += 1 / 60;\n            // y는 아래에서 위로 (ease-out)\n            const tNorm = Math.min(anim.t / 2.0, 1);\n            const y = anim.yStart + (anim.yEnd - anim.yStart) * (1 - Math.pow(1 - tNorm, 2));\n            mesh.position.y = y;\n            mesh.material.opacity = Math.max(0, 1 - tNorm * 0.7);\n            mesh.rotation.z += anim.rot;\n            if (anim.t > 2.0) {\n                scene.remove(mesh);\n            }\n        }\n        renderer.render(scene, camera);\n        popAnimFrameRef.current = requestAnimationFrame(()=>animateDollars(scene, camera, renderer, popAnimFrameRef));\n    }\n    // % 스택 생성 및 애니메이션 함수\n    const MAX_PERCENT_STACK = 8; // 화면에 보이는 최대 개수\n    const percentStackAnimRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)({});\n    function createPercentStack(scene, count) {\n        // 기존 % 메쉬 제거\n        percentMeshesRef.current.forEach((m)=>scene.remove(m));\n        percentMeshesRef.current = [];\n        // 최대 MAX_PERCENT_STACK까지만 쌓임\n        const stackCount = Math.min(count, MAX_PERCENT_STACK);\n        for(let i = 0; i < stackCount; i++){\n            const fontSize = 0.36;\n            const canvas = document.createElement('canvas');\n            canvas.width = 192;\n            canvas.height = 192;\n            const ctx = canvas.getContext('2d');\n            ctx.font = \"bold 154px sans-serif\";\n            ctx.textAlign = 'center';\n            ctx.textBaseline = 'middle';\n            ctx.fillStyle = '#39ff14';\n            ctx.strokeStyle = '#39ff14';\n            ctx.lineWidth = 6;\n            ctx.strokeText('%', 96, 96);\n            ctx.fillText('%', 96, 96);\n            const tex = new three__WEBPACK_IMPORTED_MODULE_2__.CanvasTexture(canvas);\n            const mat = new three__WEBPACK_IMPORTED_MODULE_2__.MeshBasicMaterial({\n                map: tex,\n                transparent: true,\n                opacity: 1\n            });\n            const geo = new three__WEBPACK_IMPORTED_MODULE_2__.PlaneGeometry(fontSize, fontSize);\n            const mesh = new three__WEBPACK_IMPORTED_MODULE_2__.Mesh(geo, mat);\n            // x는 0, y는 -1.2 + i*0.28, z는 0.35 (모델 바로 앞)\n            // 마지막 %만 애니메이션, 나머지는 고정\n            if (i === stackCount - 1 && count > percentMeshesRef.current.length) {\n                mesh.position.set(0, -1.2, 0.35);\n                mesh.renderOrder = 1000;\n                scene.add(mesh);\n                percentMeshesRef.current.push(mesh);\n                // 애니메이션: 아래에서 위로\n                let t = 0;\n                const yStart = -1.2;\n                const yEnd = -1.2 + i * 0.28;\n                function animatePercent() {\n                    t += 1 / 60;\n                    const tNorm = Math.min(t / 0.6, 1); // 0.6초 동안\n                    mesh.position.y = yStart + (yEnd - yStart) * (1 - Math.pow(1 - tNorm, 2));\n                    if (t < 0.6) {\n                        requestAnimationFrame(animatePercent);\n                    } else {\n                        mesh.position.y = yEnd;\n                    }\n                }\n                animatePercent();\n            } else {\n                mesh.position.set(0, -1.2 + i * 0.28, 0.35);\n                mesh.renderOrder = 1000;\n                scene.add(mesh);\n                percentMeshesRef.current.push(mesh);\n            }\n        }\n    }\n    // $ 스택 생성 및 애니메이션 함수 (공놀이방 스타일)\n    const MAX_DOLLAR_STACK = 40;\n    function updateStackedDollars(scene, count) {\n        // 기존 $ 메쉬는 남기고, 새로 추가되는 것만 생성\n        while(stackedDollarMeshesRef.current.length < Math.min(count, MAX_DOLLAR_STACK)){\n            const i = stackedDollarMeshesRef.current.length;\n            const fontSize = 0.32 + Math.random() * 0.12;\n            const canvas = document.createElement('canvas');\n            canvas.width = 192;\n            canvas.height = 192;\n            const ctx = canvas.getContext('2d');\n            ctx.font = \"bold 154px sans-serif\";\n            ctx.textAlign = 'center';\n            ctx.textBaseline = 'middle';\n            ctx.fillStyle = '#39ff14';\n            ctx.strokeStyle = '#39ff14';\n            ctx.lineWidth = 8;\n            ctx.strokeText('$', 96, 96);\n            ctx.fillText('$', 96, 96);\n            const tex = new three__WEBPACK_IMPORTED_MODULE_2__.CanvasTexture(canvas);\n            const mat = new three__WEBPACK_IMPORTED_MODULE_2__.MeshBasicMaterial({\n                map: tex,\n                transparent: true,\n                opacity: 1\n            });\n            const geo = new three__WEBPACK_IMPORTED_MODULE_2__.PlaneGeometry(fontSize, fontSize);\n            const mesh = new three__WEBPACK_IMPORTED_MODULE_2__.Mesh(geo, mat);\n            // 랜덤한 x/z, y는 바닥에서 시작\n            const x = (Math.random() - 0.5) * 2.2; // 넓게 퍼지게\n            const z = 0.2 + Math.random() * 0.8;\n            const yStart = -1.6;\n            const yEnd = -1.2 + Math.random() * 0.5; // 바닥~중간\n            mesh.position.set(x, yStart, z);\n            mesh.renderOrder = 1001;\n            scene.add(mesh);\n            stackedDollarMeshesRef.current.push(mesh);\n            // 애니메이션: 아래에서 위로 튀어오르기\n            let t = 0;\n            function animateStackedDollar() {\n                t += 1 / 60;\n                const tNorm = Math.min(t / 0.5, 1); // 0.5초\n                mesh.position.y = yStart + (yEnd - yStart) * (1 - Math.pow(1 - tNorm, 2));\n                mesh.rotation.z += 0.04 * (1 - tNorm); // 살짝 회전\n                if (t < 0.5) {\n                    requestAnimationFrame(animateStackedDollar);\n                } else {\n                    mesh.position.y = yEnd;\n                }\n            }\n            animateStackedDollar();\n        }\n        // 개수 줄어들면 제거(필요시)\n        while(stackedDollarMeshesRef.current.length > Math.min(count, MAX_DOLLAR_STACK)){\n            const mesh = stackedDollarMeshesRef.current.pop();\n            scene.remove(mesh);\n        }\n    }\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"GLBPersonaAnimation.useEffect\": ()=>{\n            const width = mountRef.current.clientWidth;\n            const height = mountRef.current.clientHeight;\n            const scene = new three__WEBPACK_IMPORTED_MODULE_2__.Scene();\n            scene.background = new three__WEBPACK_IMPORTED_MODULE_2__.Color(step === 5 ? '#bbb' : '#fff');\n            // FOV를 24로 더 줄여 왜곡 최소화\n            const camera = new three__WEBPACK_IMPORTED_MODULE_2__.PerspectiveCamera(24, width / height, 0.1, 1000);\n            camera.position.set(0, 0, 4.2); // 살짝 뒤로\n            camera.lookAt(0, 0, 0);\n            cameraRef.current = camera;\n            const renderer = new three__WEBPACK_IMPORTED_MODULE_2__.WebGLRenderer({\n                antialias: true,\n                alpha: true\n            });\n            renderer.toneMapping = three__WEBPACK_IMPORTED_MODULE_2__.ACESFilmicToneMapping;\n            renderer.toneMappingExposure = 1.05;\n            renderer.outputColorSpace = three__WEBPACK_IMPORTED_MODULE_2__.SRGBColorSpace;\n            renderer.setSize(width, height);\n            renderer.setPixelRatio(window.devicePixelRatio);\n            mountRef.current.appendChild(renderer.domElement);\n            // 조명\n            const ambientLight = new three__WEBPACK_IMPORTED_MODULE_2__.AmbientLight(0xffffff, 0.7); // 주변광 약하게\n            scene.add(ambientLight);\n            const dirLight = new three__WEBPACK_IMPORTED_MODULE_2__.DirectionalLight(0xffffff, 3.5); // 더 강하게\n            dirLight.position.set(-6, 4, 2); // 좌측(-x)에서 쏨\n            dirLight.castShadow = true;\n            dirLight.shadow.mapSize.width = 2048;\n            dirLight.shadow.mapSize.height = 2048;\n            dirLight.shadow.bias = -0.001;\n            scene.add(dirLight);\n            // 그림자 받는 평면 추가 (바닥)\n            const planeGeometry = new three__WEBPACK_IMPORTED_MODULE_2__.PlaneGeometry(10, 10);\n            const planeMaterial = new three__WEBPACK_IMPORTED_MODULE_2__.ShadowMaterial({\n                opacity: 0.25\n            });\n            const shadowPlane = new three__WEBPACK_IMPORTED_MODULE_2__.Mesh(planeGeometry, planeMaterial);\n            shadowPlane.rotation.x = -Math.PI / 2;\n            shadowPlane.position.y = -1.2;\n            shadowPlane.receiveShadow = true;\n            scene.add(shadowPlane);\n            renderer.shadowMap.enabled = true;\n            renderer.shadowMap.type = three__WEBPACK_IMPORTED_MODULE_2__.PCFSoftShadowMap;\n            // 우측에서 연한 연두색 반사광 추가\n            const rightLight = new three__WEBPACK_IMPORTED_MODULE_2__.PointLight('#baffc9', 1.2, 10);\n            rightLight.position.set(4, 2, 2); // 우측(+x)에서 쏨\n            rightLight.castShadow = false;\n            scene.add(rightLight);\n            // GLB 모델 로드\n            const loader = new three_examples_jsm_loaders_GLTFLoader__WEBPACK_IMPORTED_MODULE_3__.GLTFLoader();\n            // 모델 교체 시 오버레이 페이드 효과\n            setFadeOverlay(true);\n            setFadeKey({\n                \"GLBPersonaAnimation.useEffect\": (k)=>k + 1\n            }[\"GLBPersonaAnimation.useEffect\"]);\n            setTimeout({\n                \"GLBPersonaAnimation.useEffect\": ()=>setFadeOverlay(false)\n            }[\"GLBPersonaAnimation.useEffect\"], 500);\n            loader.load(src, {\n                \"GLBPersonaAnimation.useEffect\": (gltf)=>{\n                    const model = gltf.scene;\n                    model.position.set(0, -0.8, 0); // 초기 y 위치\n                    model.scale.set(scale, scale, scale); // props로 받은 scale 적용\n                    model.rotation.x = 0.18; // main.glb 애니메이션 후 각도를 기본값으로 적용\n                    model.traverse({\n                        \"GLBPersonaAnimation.useEffect\": (child)=>{\n                            if (child.isMesh) {\n                                child.castShadow = true;\n                                child.receiveShadow = true;\n                            }\n                        }\n                    }[\"GLBPersonaAnimation.useEffect\"]);\n                    modelRef.current = model;\n                    scene.add(model);\n                // 배경 플레인 추가 (모델 바로 뒤)\n                // let bgUrl = null;\n                // if (selectedEnv === 'school') bgUrl = '/sch.jpg';\n                // else if (selectedEnv === 'work') bgUrl = '/wor.jpg';\n                // else if (selectedEnv === 'friend') bgUrl = '/cla.jpg';\n                // if (bgUrl) {\n                //   const texLoader = new THREE.TextureLoader();\n                //   texLoader.load(bgUrl, (tex) => {\n                //     const bgGeo = new THREE.PlaneGeometry(5.2, 3.7);\n                //     const bgMat = new THREE.MeshBasicMaterial({ map: tex, transparent: true, opacity: 0.45 });\n                //     const bgMesh = new THREE.Mesh(bgGeo, bgMat);\n                //     bgMesh.position.set(0, 0.3, -2.5);\n                //     bgMesh.renderOrder = 1;\n                //     scene.add(bgMesh);\n                //   });\n                // }\n                }\n            }[\"GLBPersonaAnimation.useEffect\"]);\n            // 애니메이션 루프\n            let raf;\n            function animateLoop() {\n                raf = requestAnimationFrame(animateLoop);\n                renderer.render(scene, camera);\n            }\n            animateLoop();\n            if (popKey > 0 && dollarPop) {\n                createDollarMeshes(scene);\n                animateDollars(scene, camera, renderer, popAnimFrameRef);\n                setTimeout({\n                    \"GLBPersonaAnimation.useEffect\": ()=>{\n                        dollarMeshesRef.current.forEach({\n                            \"GLBPersonaAnimation.useEffect\": (m)=>scene.remove(m)\n                        }[\"GLBPersonaAnimation.useEffect\"]);\n                        dollarMeshesRef.current = [];\n                        dollarAnimsRef.current = [];\n                        if (popAnimFrameRef.current) cancelAnimationFrame(popAnimFrameRef.current);\n                    }\n                }[\"GLBPersonaAnimation.useEffect\"], 1200);\n            }\n            // dollarStackCount가 바뀔 때마다 $ 스택 생성/업데이트\n            updateStackedDollars(scene, dollarStackCount);\n            return ({\n                \"GLBPersonaAnimation.useEffect\": ()=>{\n                    cancelAnimationFrame(raf);\n                    if (popAnimFrameRef.current) cancelAnimationFrame(popAnimFrameRef.current);\n                    if (mountRef.current && renderer.domElement.parentNode === mountRef.current) {\n                        mountRef.current.removeChild(renderer.domElement);\n                    }\n                }\n            })[\"GLBPersonaAnimation.useEffect\"];\n        }\n    }[\"GLBPersonaAnimation.useEffect\"], [\n        src,\n        step,\n        scale,\n        popKey,\n        dollarPop,\n        selectedEnv,\n        dollarStackCount\n    ]);\n    // 애니메이션 트리거\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"GLBPersonaAnimation.useEffect\": ()=>{\n            if (!animate || !modelRef.current || !cameraRef.current || animatingRef.current) return;\n            animatingRef.current = true;\n            // x축 회전 0.18, 카메라 z축만 이동, y 위치는 고정\n            const model = modelRef.current;\n            const camera = cameraRef.current;\n            const startRot = model.rotation.x;\n            const endRot = 0.18;\n            const startZ = camera.position.z;\n            const endZ = 2.8;\n            // y 위치 애니메이션 제거\n            const duration = 900; // ms\n            const start = performance.now();\n            function animateStep(now) {\n                const t = Math.min((now - start) / duration, 1);\n                model.rotation.x = startRot + (endRot - startRot) * t;\n                camera.position.z = startZ + (endZ - startZ) * t;\n                // model.position.y는 변경하지 않음\n                camera.lookAt(0, 0, 0);\n                if (t < 1) {\n                    requestAnimationFrame(animateStep);\n                } else {\n                    animatingRef.current = false;\n                    if (onFinish) onFinish();\n                }\n            }\n            requestAnimationFrame(animateStep);\n        }\n    }[\"GLBPersonaAnimation.useEffect\"], [\n        animate,\n        onFinish\n    ]);\n    // $ 3D 애니메이션 트리거\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"GLBPersonaAnimation.useEffect\": ()=>{\n            if (!dollarPop || !mountRef.current) return;\n            // src나 step이 바뀐 직후에는 실행하지 않음\n            let timeout = setTimeout({\n                \"GLBPersonaAnimation.useEffect.timeout\": ()=>{\n                    setPopKey({\n                        \"GLBPersonaAnimation.useEffect.timeout\": (k)=>k + 1\n                    }[\"GLBPersonaAnimation.useEffect.timeout\"]); // popKey가 바뀌면 새로 생성\n                }\n            }[\"GLBPersonaAnimation.useEffect.timeout\"], 200);\n            return ({\n                \"GLBPersonaAnimation.useEffect\": ()=>clearTimeout(timeout)\n            })[\"GLBPersonaAnimation.useEffect\"];\n        }\n    }[\"GLBPersonaAnimation.useEffect\"], [\n        dollarPop,\n        src,\n        step\n    ]);\n    // 오버레이 페이드 렌더링\n    const overlayStyle = {\n        position: 'absolute',\n        left: 0,\n        top: 0,\n        width: '100%',\n        height: '100%',\n        background: '#fff',\n        pointerEvents: 'none',\n        opacity: fadeOverlay ? 1 : 0,\n        transition: 'opacity 0.5s',\n        zIndex: 100\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        style: {\n            position: 'relative',\n            width: '100%',\n            height: '100%'\n        },\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                ref: mountRef,\n                style: {\n                    width: '100%',\n                    height: '100%'\n                }\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\82104\\\\Desktop\\\\sagakweb\\\\sagakweb\\\\components\\\\GLBPersonaAnimation.js\",\n                lineNumber: 365,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                style: overlayStyle\n            }, fadeKey, false, {\n                fileName: \"C:\\\\Users\\\\82104\\\\Desktop\\\\sagakweb\\\\sagakweb\\\\components\\\\GLBPersonaAnimation.js\",\n                lineNumber: 366,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Users\\\\82104\\\\Desktop\\\\sagakweb\\\\sagakweb\\\\components\\\\GLBPersonaAnimation.js\",\n        lineNumber: 364,\n        columnNumber: 5\n    }, this);\n}\n_s(GLBPersonaAnimation, \"fcwBdm2xaVma78d4o6ikZEeAe6A=\");\n_c = GLBPersonaAnimation;\nvar _c;\n$RefreshReg$(_c, \"GLBPersonaAnimation\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./components/GLBPersonaAnimation.js\n"));

/***/ })

});